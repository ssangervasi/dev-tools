#!/usr/bin/env python3

import os
import re
import typing as t
from pathlib import Path
from argparse import ArgumentParser
from subprocess import check_output

arg_parser = ArgumentParser()
arg_parser.add_argument("tool", choices=["clean"])


def main():
    args = arg_parser.parse_args()
    if args.tool == "clean":
        clean()


def clean():
    hist_path = get_hist_path()
    with hist_path.open("r+") as hist_f:
        lines = hist_f.readlines()
        lines.reverse()
        cleaned_lines = []
        for line in lines:
            cleaned_m = maybe_clean(line, cleaned_lines)
            if cleaned_m is None:
                continue
            cleaned_lines.append(cleaned_m)

        cleaned_lines.reverse()
        hist_f.seek(0)
        hist_f.truncate()
        hist_f.writelines(cleaned_lines)


def maybe_clean(line, cleaned_lines):
    if len(line) < 8:
        return None

    parts = line.split()
    if 10 < len(parts):
        return None

    return line


def get_hist_path():
    hist_env = os.environ.get("SPEC_HISTORY_PATH", "~/.spec_history")
    hist_path = Path(hist_env).expanduser().resolve()
    return hist_path


if __name__ == "__main__":
    main()
