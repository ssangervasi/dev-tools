#!/usr/bin/env bash

TICKETS_HOME="${TICKETS_HOME:-$HOME/tickets}"
TICKETS_HIST="ticket.hist"

##
# Actions

_new() {
	ticket_name="${ARGS[0]}"
	description="${ARGS[@]:1}"

	# echo "ticket_name '$ticket_name'"
	# echo "description '$description'"
	# __error

	if [[ -z "$ticket_name" ]]; then
		__error "Need ticket name"
	fi

	if [[ -z "$description" ]]; then
		__error "Need description"
	fi

	cd "$TICKETS_HOME" || __error "No dir $TICKETS_HOME"
	echo "$ticket_name" >> "$TICKETS_HIST"

	mkdir -p "${ticket_name}"
	cd ./"${ticket_name}" || __error "No dir ${ticket_name}"
	ticket_dir="$PWD"

	cat <<-NOTES >> ./notes.md
		# ${ticket_name}
		${description}
	NOTES
	mkdir -p screenshots

	echo "$ticket_dir"
}

_open() {
	open $(_dir)
}

_edit() {
	edit $(_dir)
}

_co() {
	git checkout -b $(_branch)
}

_switch() {
	echo "ARGS[0] '${ARGS[0]}'"
}

##
# Info

_latest() {
	ticket_name=$(_hist 1)
	if [[ -z "$ticket_name" ]]; then
		__error "No latest ticket"
	fi

	echo "$ticket_name"
}

_hist() {
	tail -n "${1:-1}" "$TICKETS_HOME"/"$TICKETS_HIST"
}

_dir() {
	echo "$TICKETS_HOME"/"${OPTS[ticket]}"
}

_notes() {
	echo "$(_dir)/notes.md"
}

_desc() {
	sed -n "2,2p" < "$(_notes)"
}

_branch() {
	echo "ssangervasi/${OPTS[ticket]}/$(
		_desc |
		sed -E 's/[^[:alpha:][:digit:]]+/-/g' |
		tr '[:upper:]' '[:lower:]'
	)"
}

_help() {
	cat <<HELP_TEXT
ticket
	new <ticket_or_feature_name> [...description]
	branch
HELP_TEXT
}

##
# Internal

__ensure_home() {
	[[ -d  "$TICKETS_HOME" ]] || __error "No TICKETS_HOME"
}

__opts() {
	declare -g -a ARGS
	declare -g -A OPTS

	OPTS[ticket]=$(_latest)

	local opt=""
	local arg

	for arg in "$@"; do
		if [[ -z "${opt}" ]]; then
			if [[ "${arg}" =~ -t|--ticket ]]; then
				opt="ticket"
			fi

			if [[ -z "${opt}" ]]; then
				ARGS+=("${arg}")
			fi
		else
			if [[ "${opt}" == ticket ]]; then
				OPTS[ticket]="${arg}"
			fi
			opt=""
		fi
	done

	# echo "ARGS ${ARGS[@]}"
	# echo "     ${!ARGS[@]}"
	# echo "OPTS ${OPTS[@]}"
	# echo "     ${!OPTS[@]}"
	# echo "----	"
}

__error() {
	echo "$@" >&2
	exit 1
}

__commands() {
	# sed -E -e 's/(a)/\1/' -e 't' -e 'd'
	declare -F |
		sed -E 's/declare -f _//' |
		grep -v '^_'
}

##

cmd="$1"
shift

__ensure_home
__opts "$@"

"_${cmd:-help}" "$@"
