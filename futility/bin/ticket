#!/usr/bin/env bash

TICKETS_HOME="${TICKETS_HOME:-$HOME/tickets}"
TICKETS_HIST="ticket.hist"

_new() {
	ticket_name="$1"
	description="${@:2}"

	if [[ -z "$ticket_name" ]]; then
		__error "Need ticket name"
	fi

	cd "$TICKETS_HOME" || __error "No dir $TICKETS_HOME"
	echo "$ticket_name" >> "$TICKETS_HIST"

	mkdir -p "${ticket_name}"
	cd ./"${ticket_name}" || __error "No dir ${ticket_name}"
	TICKET_HOME="$PWD"

	cat <<-NOTES >> ./notes.md
		# ${ticket_name}
		${description}
	NOTES
	mkdir -p screenshots

	echo "$TICKET_HOME"
}

_latest() {
	cd "$TICKETS_HOME" || __error "No TICKETS_HOME"

	ticket_name=$(_hist 1)
	if [[ -z "$ticket_name" ]]; then
		__error "No latest ticket"
	fi

	echo "$ticket_name"
}

_hist() {
	cd "$TICKETS_HOME" || __error "No TICKETS_HOME"

	tail -n "${1:-1}" "$TICKETS_HIST"
}

_dir() {
	echo "$TICKETS_HOME"/$(_latest)
}

_notes() {
	echo "$(_dir)/notes.md"
}

_desc() {
	sed -n "2,2p" < "$(_notes)"
}

_branch() {
	echo "ssangervasi/$(_latest)/$(
		_desc |
		sed -E 's/[^[:alpha:][:digit:]]+/-/g' |
		tr '[:upper:]' '[:lower:]'
	)"
}

_help() {
	cat <<HELP_TEXT
ticket
	new <ticket_or_feature_name> [...description]
	branch
HELP_TEXT
}

__error() {
	echo "$@" >&2
	exit 1
}

__commands() {
	# sed -E -e 's/(a)/\1/' -e 't' -e 'd'
	declare -F |
		sed -E 's/declare -f _//' |
		grep -v '^_'
}

cmd="$1"
shift

"_${cmd:-help}" "$@"
