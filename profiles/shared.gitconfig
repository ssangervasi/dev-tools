# [core]
#     excludesFile = ./shared.gitignore

[user]
    name = Sebastian Sangervasi
    email = villain@harmless.dev

[diff]
    renames = true
    indentHeuristic = on

[status]
    showUntrackedFiles = all

[branch]
    autosetupmerge = true

[merge]
    summary = true
    conflictstyle = diff3

[rebase]
    autosquash = true

[color]
    diff = auto
    status = auto
    branch = auto
    interactive = auto

[alias]
    # Meta!
    aliases = config --get-regexp alias

    a = add --all
    ass = add .
    ap = add --patch

    c = commit -m
    fix = commit --squash HEAD
    amen = commit --amend --no-edit
    
    ri = rebase --interactive
    rc = rebase --continue
    ra = rebase --abort
    # Rebase the "wat" stuff
    rat = !git ri $(git junction $@)

    co = checkout
    hamster = checkout master

    l = log --oneline -n 10 --no-merges
    la = log \
            -n 10 \
            --no-merges \
            --pretty=format:'%C(bold)%h%C(reset) %C(green)%an %C(dim)%ai%C(reset) [%C(magenta)%D%C(reset)] %s %N'
    lg = log --all --graph --abbrev-commit \
        --date=relative \
        --pretty=format:'%C(bold blue)%h - %C(reset)%C(green)(%ar)%C(reset) - %s %C(dim)- %an%C(reset)%C(yellow)%d'

    root-dir=rev-parse --show-toplevel
    dic = diff --cached
    junction = ! git merge-base ${1:-master} ${2:-head}
    wat = !git diff --name-status $(git junction $@)
    stat = !git diff --stat $(git junction $@)

    pf = push --force-with-lease
    hoist = push -u origin head

    b = branch -v
    s = status -sb
    current = symbolic-ref --short HEAD
    gone = ! git branch --format='%(if:equals=gone)%(upstream:track,nobracket)%(then)%(refname:short)%(end)' | grep '.'

    new = checkout -b 
    borrow = ! git fetch origin "$1" && git checkout FETCH_HEAD -b 
    # Delete a local branch of it's been merged.
    finish = branch --delete
    # Delete a local branch no matter what.
    murder = branch --delete --force
    # Delete a remote branch on origin.
    desecrate = ! git push origin ':'":$1"
    # Delete a branch and its remote on origin.
    annihilate = ! git desecrate "$1" && git murder "$1"

    # GitHub `hub` command
    cmp = !hub compare

[fetch]
    prune = true

[pull]
    rebase = true
